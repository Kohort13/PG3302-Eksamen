@startuml ControllerModel
    title Controller model
    hide empty members
    class Command{
        + <<Property>>Keyword: string
        + <<Property>>Parameters: string[]
        + command(string): Command
    }
    note bottom: Parses user input as string in constructor

    interface IController{
        + handle(Command): void
        + <<Property>>Description: string
    }
    interface IHelpController{
        + help(Command): void
    }

    abstract class AbstractController implements IController{
        # GetAllowedCommandFormat(): Command
        # {abstract} GetControllerValidator(): ControllerValidator
        # GetId(Command): bool
        - ValidateCommand(Command): bool        
    }

    IController -left- Command: uses >

    class ChangeColourController extends AbstractController{
        + handle(Command)
        + help()
    }
    IHelpController <|.. ChangeColourController


    class ControllerValidator{
        + validate(Command): bool
        + <<Property>> AvailableKeys: Dictionary<string, (bool, bool)>
        - getNumRequiredParams(): int
    }
    AbstractController::GetControllerValidator -- ControllerValidator: > returns
    
@enduml